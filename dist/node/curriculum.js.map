{"mappings":"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","sources":["src/curriculum.js"],"sourcesContent":["import jsondiffpatch from 'jsondiffpatch'\nimport { v4 } from 'uuid'\nimport $RefParser from \"json-schema-ref-parser\"\nimport _ from 'lodash'\nimport { Octokit } from \"@octokit/rest\"\n\nfunction envIsNode()\n{\n    var isNode = new Function(\"try { return this===global; } catch(e) { return false; }\")\n    return isNode();        \n}\n\nif (envIsNode()) {\n    const fetch = require('node-fetch')\n    const fs    = require('fs')\n}\n\nif (!atob) {\n    var atob = (base64) => {\n        return Buffer.from(base64, 'base64').toString('binary');\n    };\n}\n\nexport default class Curriculum {\n\n    constructor()\n    {\n        /**\n         * Keeps track of the source of all schemas (file, github, url, etc)\n         */\n        this.sources = {}\n\n        /**\n         * Contains entities by type\n         */\n        this.data    = {}\n\n        /**\n         * List of errors found with loadData()\n         */\n        this.errors  = []\n\n        this.index   = {\n            /**\n             * All non-deprecated entities by id\n             */\n            id: {},\n\n            /**\n             * Type by id\n             */\n            type: {},\n\n            /**\n             * Schema by id\n             */\n            schema: {},\n\n            /**\n             * References to other entities by id\n             */\n            references: {},\n\n            /**\n             * Deprecated entities by id\n             */\n            deprecated: {}\n        }\n\n        /**\n         * An list of all the schemas as json, by name\n         */\n        this.schemas = {}\n\n        /**\n         * The schema data by schema name\n         */\n        this.schema  = {}\n    }\n\n    uuid()\n    {\n        return v4()\n    }\n\n    updateReferences(object)\n    {\n        Object.keys(object).forEach(k => {\n            if (\n                Array.isArray(object[k]) \n                && k.substr(k.length-3)=='_id'\n            ) {\n                object[k].forEach(id => {\n                    if (!this.index.references[id]) {\n                        this.index.references[id] = [];\n                    }\n                    this.index.references[id].push(object.id);\n                })\n            } else if (\n                k.substr(k.length-3)=='_id'\n                && typeof object[k]=='string'\n            ) {\n                var id = object[k]\n                if (!this.index.references[id]) {\n                    this.index.references[id] = []\n                }\n                this.index.references[id].push(object.id)\n            }\n        })\n    }\n    \n    add(schemaName, section, object) \n    {\n        if (!object.id) {\n            object.id = this.uuid()\n        }\n        if (section == 'deprecated') {\n            throw new Error('You cannot add to deprecated, use the deprecate function instead')\n        }\n        object.unreleased = true\n        this.data[section].push(object)\n        this.schema[schemaName][section].push(object)\n        this.index.id[object.id] = object\n        this.index.type[object.id] = section\n        this.index.schema[object.id] = schemaName\n        this.updateReferences(object)\n        return object.id\n    }\n\n    deprecate(entity, replacedBy)\n    {\n        var currentSection = this.index.type[entity.id]\n        if (!currentSection) {\n            throw new Error('entity '+entity.id+' is not part of any schema')\n        }\n\n        this.replace(entity.id, replacedBy)\n    }\n\n    update(section, id, diff)\n    {\n        if (section == 'deprecated') {\n            throw new Error('You cannot update deprecated entities')\n        }\n        var entity = this.index.id[id]\n        var clone  = this.clone(entity)\n        jsondiffpatch.patch(clone, diff)\n        // check if entity must be deprecated\n        // if so check that clone.id is not entity.id\n        // if so create a new id for clone\n        if (\n            typeof entity.unreleased == 'undefined' \n            || !entity.unreleased\n        ) {\n            if (section=='deprecated') {\n                // updating a deprecated entity, so only the replacedBy may be updated\n                if (\n                    Object.keys(diff).length>1 \n                    || typeof diff.replacedBy == 'undefined'\n                ) {\n                    throw new Error('illegal deprecated entity update '+id+': '+JSON.stringify(diff))\n                }\n            }\n            if (clone.id == entity.id) {\n                clone.id = this.uuid()\n            }\n            this.add(section, clone)\n            this.replace(entity.id, clone.id)\n        } else {\n            // no need to deprecate entity, just update its contents\n            if (clone.id!=entity.id) {\n                throw new Error('update cannot change entity id')\n            }\n            entity = jsondiffpatch.patch(entity, diff)\n        }\n        this.updateReferences(entity)\n        return entity.id\n    }\n\n    /**\n     * Replace an entity with a new entity\n     * Find all links to the old entity and replace the links\n     * add replacedBy in old entity\n     * add replaces in new entity\n     */\n    replace(id, newId) \n    {\n        var oldObject = this.index.id[id]\n        var section   = this.index.type[id]\n        if (section == 'deprecated') {\n            throw new Error('refusing to replace '+id+' that is already deprecated');\n        }\n        var schemaName = this.index.schema[id]\n        if (!Array.isArray(this.schema[schemaName][section])) {\n            throw new Error(section+' is not part of schema '+schemaName)\n        }\n        if (newId) {\n            var newObject  = this.index.id[newId]\n        }\n        if (!oldObject) {\n            throw new Error('Could not find entity with id '+id+' to replace')\n        }\n\n        // if oldObject was released, deprecate it and set replaces/replacedBy references\n        if (!oldObject.unreleased) {\n            if (newObject) {\n                if (!newObject.replaces) {\n                    newObject.replaces = []\n                }\n                newObject.replaces.push(id)\n            }\n            if (!oldObject.replacedBy) {\n                oldObject.replacedBy = []\n            }\n            if (newId) {\n                oldObject.replacedBy.push(newId)\n            }\n        }\n        \n        if (!oldObject.types) {\n            oldObject.types = []\n        }\n        oldObject.types.push(section)\n        oldObject.types = [...new Set(oldObject.types)]\n\n        // remove oldObject from current section\n        this.data[section] = this.data[section].filter(e => e.id != oldObject.id)\n\n        this.schema[schemaName][section] = this.schema[schemaName][section].filter(e => e.id != oldObject.id)\n\n        var prop = this.index.type[oldObject.id]+'_id'; // get it here, since the next code might change it to deprecated\n\n        if (!oldObject.unreleased) {\n            // add oldObject to deprecated list\n            if (this.index.type[oldObject.id]!='deprecated') {\n                this.data.deprecated.push(oldObject)\n                if (!this.schema[schemaName].deprecated) {\n                    throw new Error('schema '+schemaName+' missing deprecated')\n                }\n                if (!Array.isArray(this.schema[schemaName].deprecated)) {\n                    throw new Error('schema '+schemaName+' deprecated is not an array')\n                }\n                this.schema[schemaName].deprecated.push(oldObject)\n                this.index.type[oldObject.id] = 'deprecated'\n            }\n        }\n\n        // update all references to oldObject.id to newId\n        var refs = this.index.references[oldObject.id]; // does not and must not include replaces/replacedBy references\n        if (refs) {\n            refs.forEach(id => {\n                var refOb = this.index.id[id];\n                if (refOb.deleted || this.index.type[refOb.id]==='deprecated') {\n                    return; // this is/will be deprecated anyway, so changes here won't have any effect\n                }\n                if (!refOb.unreleased) {\n                    // unreleased entities don't need to change their id if properties change\n                    // so only mark released entities as dirty\n                    refOb.dirty = true;\n                }\n                if (Array.isArray(refOb[prop])) {\n                    if (newId) {\n                        refOb[prop] = refOb[prop].map(refId => {\n                            if (refId===oldObject.id) {\n                                return newId;\n                            }\n                            return refId;\n                        });\n                    } else {\n                        refOb[prop] = refOb[prop].filter(refId => refId!==oldObject.id);\n                    }\n                } else if (typeof refOb[prop]==='string' || refOb[prop] instanceof String) {\n                    if (newId) {\n                        refOb[prop] = newId;\n                    } else {\n                        delete refOb[prop];\n                    }\n                } else {\n                    throw new Error('Unexpected property type for '+prop+' ( '+(typeof refOb[prop])+') '+refOb.id);\n                }\n            });\n        }\n    }\n\n    getParentSections(section) \n    {\n        var parentSections = []\n        var parentProperty = this.getParentProperty(section)\n        Object.values(this.schemas).forEach(schema => {\n            Object.keys(schema.definitions).forEach(\n                schemaSection => {\n                    if (typeof schema.definitions[schemaSection].properties != 'undefined' \n                        && typeof schema.definitions[schemaSection].properties[parentProperty] != 'undefined'\n                        && schemaSection != 'deprecated'\n                    ) {\n                        parentSections.push(schemaSection);\n                    }\n                }\n            )\n        });\n        return parentSections;\n    }\n\n    getParentProperty(section) \n    {\n        return section+'_id'\n    }\n\n    parseSchema(schema)\n    {\n        var resolveAllOf = (function() {\n            // from https://github.com/mokkabonna/json-schema-merge-allof\n            var customizer = function (objValue, srcValue) {\n                if (_.isArray(objValue)) {\n                    return _.union(objValue, srcValue);\n                }\n                return;\n            };\n            return function(inputSpec) {\n                if (inputSpec && typeof inputSpec === 'object') {\n                    if (Object.keys(inputSpec).length > 0) {\n                        if (inputSpec.allOf) {\n                            var allOf = inputSpec.allOf;\n                            delete inputSpec.allOf;\n                            var nested = _.mergeWith.apply(_, [{}].concat(allOf, [customizer]));\n                            inputSpec = _.defaultsDeep(inputSpec, nested, customizer);\n                        }\n                        Object.keys(inputSpec).forEach(function (key) {\n                            inputSpec[key] = resolveAllOf(inputSpec[key]);\n                        });\n                    }\n                }\n                return inputSpec;\n            }\n        })();\n\n        return $RefParser.dereference(schema)\n        .then(function(schema) {\n            return resolveAllOf(schema);\n        });\n    }\n\n\n    async loadData(schemaName) {\n\n        const schema = this.schemas[schemaName];\n        let data     = {};\n\n        const properties = Object.keys(schema.properties);\n        if (!properties || !properties.length) {\n            console.warning('No properties defined in context '+schemaName)\n            return data;\n        }\n\n        properties.forEach(propertyName => {\n            if (typeof(schema.properties[propertyName]['#file']) != 'undefined') {\n                data[propertyName] = (() => {\n                    switch(this.sources[schemaName].method) {\n                        case 'url':\n                            var baseURL = dirname(this.sources[schemaName].source)\n                            return fetch(baseURL + schema.properties[propertyName]['#file'])\n                            .then(response => {\n                                if (response.ok) {\n                                    return response.json();\n                                }\n                                throw new NetworkError(response.status+': '+response.statusText, { cause: response })\n                            });\n                        break;\n                        case 'file':\n                            var baseDir = dirname(this.sources[schemaName].source)\n                            if (!this.envIsNode()) {\n                                return new Promise((resolve, reject) => {\n                                    reject({\n                                        message: 'Filesystem support is limited to node-js'\n                                    })\n                                })\n                            }\n                            return new Promise((resolve,reject) => {\n                                fs.readFile(\n                                    baseDir + schema.properties[propertyName]['#file'], \n                                    'utf8', \n                                    (err, data) => {\n                                        if (err) {\n                                            reject(err)\n                                        } else {\n                                            resolve(data)\n                                        }\n                                    }\n                                )\n                            })\n                            .then(data => JSON.parse(data))\n                        break;\n                        case 'github':\n                            return this.sources[schemaName]\n                            \t.getFile(schema.properties[propertyName]['#file'])\n                            \t.then(data => JSON.parse(data))\n                        break;\n                        default:\n                            throw new Error('Unknown loading method '+this.sources[schemaName].method);\n                        break;\n                    }\n                })()\n            } else {\n                data[propertyName] = []\n                console.warning('No entities defined for '+propertyName)\n            }\n        })\n\n        return Promise.allSettled(Object.values(data))\n        .then(results => {\n            Object.keys(data).forEach(propertyName => {\n                data[propertyName].then(entities => {\n                    console.log('index size '+Object.keys(this.index.id).length);\n                    console.log('indexing '+schemaName+'.'+propertyName+' ('+entities.length+')');\n                    if (!this.data[propertyName]) {\n                        this.data[propertyName] = [];\n                    }\n                    Array.prototype.push.apply(this.data[propertyName],entities);\n\n                    if (!this.schema[schemaName]) {\n                        this.schema[schemaName] = {};\n                    }\n                    if (!this.schema[schemaName][propertyName]) {\n                        this.schema[schemaName][propertyName] = [];\n                    }\n                    Array.prototype.push.apply(this.schema[schemaName][propertyName],entities);\n\n                    var count = 0;\n                    entities.forEach(entity => {\n                        if (entity.id) {\n                            if (this.index.id[entity.id]) {\n                                this.errors.push('Duplicate id in '+schemaName+'.'+propertyName+': '+entity.id)\n                            } else {\n                                this.index.id[entity.id]     = entity\n                                this.index.type[entity.id]   = propertyName\n                                this.index.schema[entity.id] = schemaName\n                                this.updateReferences(entity)\n                                if (/deprecated/.exec(propertyName)!==null) {\n                                    this.index.deprecated[entity.id] = entity;\n                                }\n                            }\n                        } else {\n                            this.errors.push('Missing id in '+schemaName+'.'+propertyName+': '+count)\n                        }\n                        count++\n                    })\n                })\n            })\n            return data\n        })\n    }\n\n\tupdateReferences(object) {\n\t\tObject.keys(object).forEach(k => {\n\t\t\tif (Array.isArray(object[k]) \n\t\t\t\t&& k.substr(k.length-3)=='_id'\n\t\t\t) {\n\t\t\t\tobject[k].forEach(id => {\n\t\t\t\t\tif (!this.index.references[id]) {\n\t\t\t\t\t\tthis.index.references[id] = [];\n\t\t\t\t\t}\n\t\t\t\t\tthis.index.references[id].push(object.id);\n\t\t\t\t});\n\t\t\t} else if (k.substr(k.length-3)=='_id'\n\t\t\t\t&& typeof object[k]=='string'\n\t\t\t) {\n\t\t\t\tvar id = object[k];\n\t\t\t\tif (!this.index.references[id]) {\n\t\t\t\t\tthis.index.references[id] = [];\n\t\t\t\t}\n\t\t\t\tthis.index.references[id].push(object.id);\n\t\t\t}\n\t\t})\n\t}\n\n    async loadContextFromFile(schemaName, fileName)\n    {\n        this.sources[schemaName] = {\n            method: 'file',\n            source: fileName,\n            state: 'loading'\n        }\n        const context = await fs.readFile(fileName, 'utf8')\n        try {\n            const schema  = JSON.parse(context)\n        } catch(error) {\n            throw new SyntaxError('JSON Parse error in '+schemaName, { cause: error })\n        }\n\n        this.schemas[schemaName] = schema\n        this.schema[schemaName] = {}\n        await this.loadData(schemaName)\n        this.sources[schemaName].state = 'available'\n        return schema\n    }\n\n    async loadContextFromURL(schemaName, url)\n    {\n        this.sources[schemaName] = {\n            method: 'url',\n            source: url,\n            state: 'loading'\n        };\n        const context = await fetch(url)\n        try {\n            const schema = JSON.parse(context)\n        } catch(error) {\n            throw new SyntaxError('JSON Parse error in '+schemaName, { cause: error })\n        }\n\n        this.schemas[schemaName] = schema\n        this.schema[schemaName] = {}\n        await this.loadData(schemaName)\n        this.sources[schemaName].state = 'available'\n        return schema\n    };\n\n    async loadContextFromGithub(schemaName, repository, owner, branchName, authToken=null)\n    {\n\n        if (!branchName) {\n            branchName = 'master';\n        }\n        this.sources[schemaName] = {\n            method: 'github',\n            source: repository,\n            branch: branchName,\n            state: 'loading'\n        };\n        let options = {}\n        if (authToken) {\n        \toptions.auth = authToken\n        }\n        const octokit = new Octokit(options)\n        var getFile = function(filename, list) {\n            const nodes = filename.split('/');\n            let node    = nodes.shift();\n            let entry   = list.data.tree.filter(function(file) {\n                return file.path == node;\n            }).pop();\n            let hash = entry.sha;\n            if (nodes.length) {\n                return octokit.rest.git\n                    .getTree({owner:owner, repo:repository, tree_sha:hash})\n                    .then(list => getFile(nodes.join('/'), list))\n                \n            } else {\n                return octokit.rest.git\n                    .getBlob({owner:owner, repo:repository, file_sha:hash})\n                    .then(data => data.data)\n                    .then(data => atob(data.content))\n            }\n        };\n        this.sources[schemaName].repository = repository;\n        this.sources[schemaName].getFile = async function(filename) {\n            let branch     = await octokit.rest.repos.getBranch({owner:owner, repo:repository, branch:branchName})\n            let lastCommit = branch.data.commit.sha\n            let tree       = await octokit.rest.git.getTree({owner:owner, repo:repository, tree_sha:lastCommit})\n            return getFile(filename, tree)\n        };\n\n        const context = await this.sources[schemaName].getFile('context.json')\n        var schema = '';\n       \ttry {\n       \t\tschema = JSON.parse(context);\n       \t} catch(e) {\n       \t\tconsole.error('Incorrect json: ', context)\n       \t\tthrow new SyntaxError('Incorrect JSON in '+schemaName+' context.json')\n        }\n\n        this.schemas[schemaName] = schema\n        this.schema[schemaName] = {}\n        await this.loadData(schemaName)\n        this.sources[schemaName].state = 'available'\n        return schema\n    }\n\n\n    exportFiles(schema, schemaName, dir='')\n    {\n        const properties = Object.keys(schema.properties);\n        \n        properties.forEach(function(propertyName) {\n            //FIXME: check this.sources.type\n            if (typeof schema.properties[propertyName]['#file'] != 'undefined') {\n                var file = schema.properties[propertyName]['#file']\n                var fileData = JSON.stringify(this.schema[schemaName][propertyName], null, \"\\t\")\n                if (!fs.existsSync(dir+'data/')) {\n                    fs.mkdirSync(dir+'data/', { recursive: true})\n                }\n                fs.writeFileSync(dir+file, fileData);\n            } else {\n                console.warning('skipping export of '+propertyName+' - no source file defined')\n            }\n        })\n    }\n\n    clone(object)\n    {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    getDirty()\n    {\n        let dirty = []\n        Object.keys(this.index.id).forEach(id => {\n            if (\n                this.index.id[id].dirty \n                && !this.index.id[id].unreleased\n            ) {\n                dirty.push(this.index.id[id])\n            }\n        })\n        return dirty\n    }\n\n    parseSchema(schema) {\n        var resolveAllOf = (() => {\n            // from https://github.com/mokkabonna/json-schema-merge-allof\n            var customizer = function (objValue, srcValue) {\n                if (Array.isArray(objValue)) {\n                    return _.union(objValue, srcValue);\n                }\n                return;\n            };\n            return (inputSpec) => {\n                if (inputSpec && typeof inputSpec === 'object') {\n                    if (Object.keys(inputSpec).length > 0) {\n                        if (inputSpec.allOf) {\n                            var allOf  = inputSpec.allOf\n                            delete inputSpec.allOf\n                            var nested = _.mergeWith.apply(_, [{}].concat(allOf, [customizer]))\n                            inputSpec  = _.defaultsDeep(inputSpec, nested, customizer)\n                        }\n                        Object.keys(inputSpec).forEach(function (key) {\n                            inputSpec[key] = resolveAllOf(inputSpec[key])\n                        })\n                    }\n                }\n                return inputSpec\n            }\n        })()\n\n        return $RefParser.dereference(schema)\n        .then(function(schema) {\n            return resolveAllOf(schema)\n        })\n    }\n\n}    "],"names":[],"version":3,"file":"curriculum.js.map","sourceRoot":"../../"}