{"mappings":"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","sources":["src/curriculum.js"],"sourcesContent":["import jsondiffpatch from 'jsondiffpatch'\nimport { v4 } from 'uuid'\nimport $RefParser from \"json-schema-ref-parser\"\nimport _ from 'lodash'\nimport { Octokit } from \"@octokit/rest\"\n\nfunction envIsNode()\n{\n\tvar isNode = new Function(\"try { return this===global; } catch(e) { return false; }\")\n\treturn isNode();\t\t\n}\n\nif (envIsNode()) {\n\tconst fetch = require('node-fetch')\n\tconst fs    = require('fs')\n}\n\nexport default class Curriculum {\n\n\tconstructor()\n\t{\n\t\t/**\n\t\t * Keeps track of the source of all schemas (file, github, url, etc)\n\t\t */\n\t\tthis.sources = {}\n\n\t\t/**\n\t\t * Contains entities by type\n\t\t */\n\t\tthis.data    = {}\n\n\t\t/**\n\t\t * List of errors found with loadData()\n\t\t */\n\t\tthis.errors  = []\n\n\t\tthis.index   = {\n\t\t\t/**\n\t\t\t * All non-deprecated entities by id\n\t\t\t */\n\t\t\tid: {},\n\n\t\t\t/**\n\t\t\t * Type by id\n\t\t\t */\n\t\t\ttype: {},\n\n\t\t\t/**\n\t\t\t * Schema by id\n\t\t\t */\n\t\t\tschema: {},\n\n\t\t\t/**\n\t\t\t * References to other entities by id\n\t\t\t */\n\t\t\treferences: {},\n\n\t\t\t/**\n\t\t\t * Deprecated entities by id\n\t\t\t */\n\t\t\tdeprecated: {}\n\t\t}\n\n\t\t/**\n\t\t * An array of all the schemas as json\n\t\t */\n\t\tthis.schemas = []\n\n\t\t/**\n\t\t * The schemas by schema name\n\t\t */\n\t\tthis.schema  = {}\n\t}\n\n\tuuid()\n\t{\n\t\treturn v4()\n\t}\n\n\tupdateReferences(object)\n\t{\n\t\tObject.keys(object).forEach(k => {\n\t\t\tif (\n\t\t\t\tArray.isArray(object[k]) \n\t\t\t\t&& k.substr(k.length-3)=='_id'\n\t\t\t) {\n\t\t\t\tobject[k].forEach(id => {\n\t\t\t\t\tif (!this.index.references[id]) {\n\t\t\t\t\t\tthis.index.references[id] = [];\n\t\t\t\t\t}\n\t\t\t\t\tthis.index.references[id].push(object.id);\n\t\t\t\t})\n\t\t\t} else if (\n\t\t\t\tk.substr(k.length-3)=='_id'\n\t\t\t\t&& typeof object[k]=='string'\n\t\t\t) {\n\t\t\t\tvar id = object[k]\n\t\t\t\tif (!this.index.references[id]) {\n\t\t\t\t\tthis.index.references[id] = []\n\t\t\t\t}\n\t\t\t\tthis.index.references[id].push(object.id)\n\t\t\t}\n\t\t})\n\t}\n\t\n\tadd(schemaName, section, object) \n\t{\n\t\tif (!object.id) {\n\t\t\tobject.id = this.uuid()\n\t\t}\n\t\tif (section == 'deprecated') {\n\t\t\tthrow new Error('You cannot add to deprecated, use the deprecate function instead')\n\t\t}\n\t\tobject.unreleased = true\n\t\tthis.data[section].push(object)\n\t\tthis.schema[schemaName][section].push(object)\n\t\tthis.index.id[object.id] = object\n\t\tthis.index.type[object.id] = section\n\t\tthis.index.schema[object.id] = schemaName\n\t\tthis.updateReferences(object)\n\t\treturn object.id\n\t}\n\n\tdeprecate(entity, replacedBy)\n\t{\n\t\tvar currentSection = this.index.type[entity.id]\n\t\tif (!currentSection) {\n\t\t\tthrow new Error('entity '+entity.id+' is not part of any schema')\n\t\t}\n\n\t\tthis.replace(entity.id, replacedBy)\n\t}\n\n\tupdate(section, id, diff)\n\t{\n\t\tif (section == 'deprecated') {\n\t\t\tthrow new Error('You cannot update deprecated entities')\n\t\t}\n\t\tvar entity = this.index.id[id]\n\t\tvar clone  = this.clone(entity)\n\t\tjsondiffpatch.patch(clone, diff)\n\t\t// check if entity must be deprecated\n\t\t// if so check that clone.id is not entity.id\n\t\t// if so create a new id for clone\n\t\tif (\n\t\t\ttypeof entity.unreleased == 'undefined' \n\t\t\t|| !entity.unreleased\n\t\t) {\n\t\t\tif (section=='deprecated') {\n\t\t\t\t// updating a deprecated entity, so only the replacedBy may be updated\n\t\t\t\tif (\n\t\t\t\t\tObject.keys(diff).length>1 \n\t\t\t\t\t|| typeof diff.replacedBy == 'undefined'\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error('illegal deprecated entity update '+id+': '+JSON.stringify(diff))\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clone.id == entity.id) {\n\t\t\t\tclone.id = this.uuid()\n\t\t\t}\n\t\t\tthis.add(section, clone)\n\t\t\tthis.replace(entity.id, clone.id)\n\t\t} else {\n\t\t\t// no need to deprecate entity, just update its contents\n\t\t\tif (clone.id!=entity.id) {\n\t\t\t\tthrow new Error('update cannot change entity id')\n\t\t\t}\n\t\t\tentity = jsondiffpatch.patch(entity, diff)\n\t\t}\n\t\tthis.updateReferences(entity)\n\t\treturn entity.id\n\t}\n\n\t/**\n\t * Replace an entity with a new entity\n\t * Find all links to the old entity and replace the links\n\t * add replacedBy in old entity\n\t * add replaces in new entity\n\t */\n\treplace(id, newId) \n\t{\n\t\tvar oldObject = this.index.id[id]\n\t\tvar section   = this.index.type[id]\n\t\tif (section == 'deprecated') {\n\t\t\tthrow new Error('refusing to replace '+id+' that is already deprecated');\n\t\t}\n\t\tvar schemaName = this.index.schema[id]\n\t\tif (!Array.isArray(this.schema[schemaName][section])) {\n\t\t\tthrow new Error(section+' is not part of schema '+schemaName)\n\t\t}\n\t\tif (newId) {\n\t\t\tvar newObject  = this.index.id[newId]\n\t\t}\n\t\tif (!oldObject) {\n\t\t\tthrow new Error('Could not find entity with id '+id+' to replace')\n\t\t}\n\n\t\t// if oldObject was released, deprecate it and set replaces/replacedBy references\n\t\tif (!oldObject.unreleased) {\n\t\t\tif (newObject) {\n\t\t\t\tif (!newObject.replaces) {\n\t\t\t\t\tnewObject.replaces = []\n\t\t\t\t}\n\t\t\t\tnewObject.replaces.push(id)\n\t\t\t}\n\t\t\tif (!oldObject.replacedBy) {\n\t\t\t\toldObject.replacedBy = []\n\t\t\t}\n\t\t\tif (newId) {\n\t\t\t\toldObject.replacedBy.push(newId)\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!oldObject.types) {\n\t\t\toldObject.types = []\n\t\t}\n\t\toldObject.types.push(section)\n\t\toldObject.types = [...new Set(oldObject.types)]\n\n\t\t// remove oldObject from current section\n\t\tthis.data[section] = this.data[section].filter(e => e.id != oldObject.id)\n\n\t\tthis.schema[schemaName][section] = this.schema[schemaName][section].filter(e => e.id != oldObject.id)\n\n\t\tvar prop = this.index.type[oldObject.id]+'_id'; // get it here, since the next code might change it to deprecated\n\n\t\tif (!oldObject.unreleased) {\n\t\t\t// add oldObject to deprecated list\n\t\t\tif (this.index.type[oldObject.id]!='deprecated') {\n\t\t\t\tthis.data.deprecated.push(oldObject)\n\t\t\t\tif (!this.schema[schemaName].deprecated) {\n\t\t\t\t\tthrow new Error('schema '+schemaName+' missing deprecated')\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(this.schema[schemaName].deprecated)) {\n\t\t\t\t\tthrow new Error('schema '+schemaName+' deprecated is not an array')\n\t\t\t\t}\n\t\t\t\tthis.schema[schemaName].deprecated.push(oldObject)\n\t\t\t\tthis.index.type[oldObject.id] = 'deprecated'\n\t\t\t}\n\t\t}\n\n\t\t// update all references to oldObject.id to newId\n\t\tvar refs = this.index.references[oldObject.id]; // does not and must not include replaces/replacedBy references\n\t\tif (refs) {\n\t\t\trefs.forEach(id => {\n\t\t\t\tvar refOb = this.index.id[id];\n\t\t\t\tif (refOb.deleted || this.index.type[refOb.id]==='deprecated') {\n\t\t\t\t\treturn; // this is/will be deprecated anyway, so changes here won't have any effect\n\t\t\t\t}\n\t\t\t\tif (!refOb.unreleased) {\n\t\t\t\t\t// unreleased entities don't need to change their id if properties change\n\t\t\t\t\t// so only mark released entities as dirty\n\t\t\t\t\trefOb.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(refOb[prop])) {\n\t\t\t\t\tif (newId) {\n\t\t\t\t\t\trefOb[prop] = refOb[prop].map(refId => {\n\t\t\t\t\t\t\tif (refId===oldObject.id) {\n\t\t\t\t\t\t\t\treturn newId;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn refId;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\trefOb[prop] = refOb[prop].filter(refId => refId!==oldObject.id);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof refOb[prop]==='string' || refOb[prop] instanceof String) {\n\t\t\t\t\tif (newId) {\n\t\t\t\t\t\trefOb[prop] = newId;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete refOb[prop];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Unexpected property type for '+prop+' ( '+(typeof refOb[prop])+') '+refOb.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetParentSections(section) \n\t{\n\t\tvar parentSections = []\n\t\tvar parentProperty = this.getParentProperty(section)\n\t\tthis.schemas.forEach(schema => {\n\t\t\tObject.keys(schema.definitions).forEach(\n\t\t\t\tschemaSection => {\n\t\t\t\t\tif (typeof schema.definitions[schemaSection].properties != 'undefined' \n\t\t\t\t\t\t&& typeof schema.definitions[schemaSection].properties[parentProperty] != 'undefined'\n\t\t\t\t\t\t&& schemaSection != 'deprecated'\n\t\t\t\t\t) {\n\t\t\t\t\t\tparentSections.push(schemaSection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t});\n\t\treturn parentSections;\n\t}\n\n\tgetParentProperty(section) \n\t{\n\t\treturn section+'_id'\n\t}\n\n\tparseSchema(schema)\n\t{\n        var resolveAllOf = (function() {\n            // from https://github.com/mokkabonna/json-schema-merge-allof\n            var customizer = function (objValue, srcValue) {\n                if (_.isArray(objValue)) {\n                    return _.union(objValue, srcValue);\n                }\n                return;\n            };\n            return function(inputSpec) {\n                if (inputSpec && typeof inputSpec === 'object') {\n                    if (Object.keys(inputSpec).length > 0) {\n                        if (inputSpec.allOf) {\n                            var allOf = inputSpec.allOf;\n                            delete inputSpec.allOf;\n                            var nested = _.mergeWith.apply(_, [{}].concat(allOf, [customizer]));\n                            inputSpec = _.defaultsDeep(inputSpec, nested, customizer);\n                        }\n                        Object.keys(inputSpec).forEach(function (key) {\n                            inputSpec[key] = resolveAllOf(inputSpec[key]);\n                        });\n                    }\n                }\n                return inputSpec;\n            }\n        })();\n\n\t\treturn $RefParser.dereference(schema)\n\t\t.then(function(schema) {\n\t\t\treturn resolveAllOf(schema);\n\t\t});\n\t}\n\n\n\tasync loadData(schemaName) {\n\n\t\tconst schema = curriculum.schemas[name];\n        let data     = {};\n\n        const properties = Object.keys(schema.properties);\n\t\tif (!properties || !properties.length) {\n\t\t\tconsole.warning('No properties defined in context '+schemaName)\n\t\t\treturn data;\n\t\t}\n\n        properties.forEach(function(propertyName) {\n            if (typeof(schema.properties[propertyName]['#file']) != 'undefined') {\n                data[propertyName] = (() => {\n                    switch(this.sources[name].method) {\n                        case 'url':\n                            var baseURL = dirname(this.sources[name].source)\n                            return fetch(baseURL + schema.properties[propertyName]['#file'])\n                            .then(response => {\n                                if (response.ok) {\n                                    return response.json();\n                                }\n                                throw new NetworkError(response.status+': '+response.statusText, { cause: response })\n                            });\n                        break;\n                        case 'file':\n                            var baseDir = dirname(curriculum.sources[name].source)\n                            if (!this.envIsNode()) {\n                            \treturn new Promise((resolve, reject) => {\n                            \t\treject({\n                            \t\t\tmessage: 'Filesystem support is limited to node-js'\n                            \t\t})\n                            \t})\n                            }\n                            return new Promise((resolve,reject) => {\n                                fs.readFile(\n                                    baseDir + schema.properties[propertyName]['#file'], \n                                    'utf8', \n                                    (err, data) => {\n                                        if (err) {\n                                            reject(err)\n                                        } else {\n                                            resolve(data)\n                                        }\n                                    }\n                                )\n                            })\n                            .then(function(result) {\n                                return JSON.parse(result)\n                            })\n                        break;\n                        case 'github':\n                            return this.sources[name].getFile(schema.properties[propertyName]['#file']);\n                        break;\n                        default:\n                            throw new Error('Unknown loading method '+curriculum.sources[name].method);\n                        break;\n                    }\n                })()\n            } else {\n                data[propertyName] = []\n                console.warning('No entities defined for '+propertyName)\n            }\n        })\n\n        return Promise.allSettled(Object.values(data))\n        .then(results => {\n            Object.keys(data).forEach(propertyName => {\n                data[propertyName].then(entities => {\n                    console.log('index size '+Object.keys(this.index.id).length);\n                    console.log('indexing '+name+'.'+propertyName+' ('+entities.length+')');\n                    if (!this.data[propertyName]) {\n                        this.data[propertyName] = [];\n                    }\n                    Array.prototype.push.apply(this.data[propertyName],entities);\n\n                    if (!this.schema[name]) {\n                        this.schema[name] = {};\n                    }\n                    if (!this.schema[name][propertyName]) {\n                        this.schema[name][propertyName] = [];\n                    }\n                    Array.prototype.push.apply(this.schema[name][propertyName],entities);\n\n                    var count = 0;\n                    entities.forEach(entity => {\n                        if (entity.id) {\n                            if (this.index.id[entity.id]) {\n                                this.errors.push('Duplicate id in '+name+'.'+propertyName+': '+entity.id)\n                            } else {\n                                this.index.id[entity.id]     = entity\n                                this.index.type[entity.id]   = propertyName\n                                this.index.schema[entity.id] = name\n                                updateReferences(entity)\n\t\t\t\t\t\t\t\tif (/deprecated/.exec(propertyName)!==null) {\n\t\t\t\t\t\t\t\t\tthis.index.deprecated[entity.id] = entity;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                        } else {\n                            this.errors.push('Missing id in '+name+'.'+propertyName+': '+count)\n                        }\n                        count++\n                    })\n                })\n            })\n            return data\n        })\n    }\n\n\tasync loadContextFromFile(schemaName, fileName)\n\t{\n\t\tthis.sources[schemaName] = {\n\t\t\tmethod: 'file',\n\t\t\tsource: fileName,\n\t\t\tstate: 'loading'\n\t\t}\n\t\tconst context = await fs.readFile(fileName, 'utf8')\n\t\ttry {\n\t\t\tconst schema  = JSON.parse(context)\n\t\t} catch(error) {\n\t\t\tthrow new SyntaxError('JSON Parse error in '+schemaName, { cause: error })\n\t\t}\n\n\t\tthis.schemas.push(schema)\n\t\tthis.schema[schemaName] = {}\n\t\tawait this.loadData(schemaName)\n\t\tthis.sources[schemaName].state = 'available'\n\t\treturn schema\n\t}\n\n\tasync loadContextFromURL(schemaName, url)\n\t{\n        this.sources[schemaName] = {\n            method: 'url',\n            source: url,\n            state: 'loading'\n        };\n        const context = await fetch(url)\n        try {\n        \tconst schema = JSON.parse(context)\n\t\t} catch(error) {\n\t\t\tthrow new SyntaxError('JSON Parse error in '+schemaName, { cause: error })\n\t\t}\n\n\t\tthis.schemas.push(schema)\n\t\tthis.schema[schemaName] = {}\n\t\tawait this.loadData(schemaName)\n\t\tthis.sources[schemaName].state = 'available'\n\t\treturn schema\n    };\n\n    async loadContextFromGithub(schemaName, repository, owner, branchName)\n    {\n\n    \tif (!branchName) {\n\t\t\tbranchName = 'master';\n\t\t}\n        this.sources[schemaName] = {\n            method: 'github',\n            source: repository,\n\t\t\tbranch: branchName,\n            state: 'loading'\n        };\n        const octokit = new Octokit()\n        var getFile = function(filename, list) {\n            const nodes = filename.split('/');\n            let node    = nodes.shift();\n            let entry   = list.data.tree.filter(function(file) {\n                return file.path == node;\n            }).pop();\n            let hash = entry.sha;\n            if (nodes.length) {\n                return octokit.rest.git\n                \t.getTree({owner:owner, repo:repository, tree_sha:hash})\n                \t.then(list => getFile(nodes.join('/'), list))\n                \n            } else {\n                return octokit.rest.git\n                \t.getBlob({owner:owner, repo:repository, file_sha:hash})\n                \t.then(data => data.data)\n            }\n        };\n\t\tthis.sources[schemaName].repository = repository;\n        this.sources[schemaName].getFile = async function(filename) {\n            let branch     = await octokit.rest.repos.getBranch({owner:owner, repo:repository, branch:branchName})\n            let lastCommit = branch.data.commit.sha\n            let tree       = await octokit.rest.git.getTree({owner:owner, repo:repository, tree_sha:lastCommit})\n            return getFile(filename, tree)\n        };\n\n        const context = await this.sources[schemaName].getFile('context.json')\n        try {\n        \tconst schema = JSON.parse(context)\n\t\t} catch(error) {\n\t\t\tthrow new SyntaxError('JSON Parse error in '+schemaName, { cause: error })\n\t\t}\n\n\t\tthis.schemas.push(schema)\n\t\tthis.schema[schemaName] = {}\n\t\tawait this.loadData(schemaName)\n\t\tthis.sources[schemaName].state = 'available'\n\t\treturn schema\n    }\n\n\n\texportFiles(schema, schemaName, dir='')\n\t{\n\t\tconst properties = Object.keys(schema.properties);\n\t\t\n\t\tproperties.forEach(function(propertyName) {\n\t\t\t//FIXME: check this.sources.type\n\t\t\tif (typeof schema.properties[propertyName]['#file'] != 'undefined') {\n\t\t\t\tvar file = schema.properties[propertyName]['#file']\n\t\t\t\tvar fileData = JSON.stringify(this.schema[schemaName][propertyName], null, \"\\t\")\n\t\t\t\tif (!fs.existsSync(dir+'data/')) {\n\t\t\t\t\tfs.mkdirSync(dir+'data/', { recursive: true})\n\t\t\t\t}\n\t\t\t\tfs.writeFileSync(dir+file, fileData);\n\t\t\t} else {\n\t\t\t\tconsole.warning('skipping export of '+propertyName+' - no source file defined')\n\t\t\t}\n\t\t})\n\t}\n\n\tclone(object)\n\t{\n\t\treturn JSON.parse(JSON.stringify(object))\n\t}\n\n\tgetDirty()\n\t{\n\t\tlet dirty = []\n\t\tObject.keys(this.index.id).forEach(id => {\n\t\t\tif (\n\t\t\t\tthis.index.id[id].dirty \n\t\t\t\t&& !this.index.id[id].unreleased\n\t\t\t) {\n\t\t\t\tdirty.push(this.index.id[id])\n\t\t\t}\n\t\t})\n\t\treturn dirty\n\t}\n\n\tparseSchema(schema) {\n        var resolveAllOf = (() => {\n            // from https://github.com/mokkabonna/json-schema-merge-allof\n            var customizer = function (objValue, srcValue) {\n                if (Array.isArray(objValue)) {\n                    return _.union(objValue, srcValue);\n                }\n                return;\n            };\n            return (inputSpec) => {\n                if (inputSpec && typeof inputSpec === 'object') {\n                    if (Object.keys(inputSpec).length > 0) {\n                        if (inputSpec.allOf) {\n                            var allOf  = inputSpec.allOf\n                            delete inputSpec.allOf\n                            var nested = _.mergeWith.apply(_, [{}].concat(allOf, [customizer]))\n                            inputSpec  = _.defaultsDeep(inputSpec, nested, customizer)\n                        }\n                        Object.keys(inputSpec).forEach(function (key) {\n                            inputSpec[key] = resolveAllOf(inputSpec[key])\n                        })\n                    }\n                }\n                return inputSpec\n            }\n        })()\n\n        return $RefParser.dereference(schema)\n        .then(function(schema) {\n            return resolveAllOf(schema)\n        })\n    }\n\n}\t"],"names":[],"version":3,"file":"curriculum.js.map","sourceRoot":"../../"}